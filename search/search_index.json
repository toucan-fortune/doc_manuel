{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Accueil","text":""},{"location":"#projet","title":"Projet","text":"<p>L'objectif est de construire une chaine calqu\u00e9e sur le mod\u00e8le d'AIoICanada. Un objet mesure des donn\u00e9es environnementales quelconques, des donn\u00e9es brutes et des statistiques issues de calculs \u00e0 la pointe1. Les donn\u00e9es parcourent divers composants pour arriver dans une interface; comme un tableau de bord.</p> <p></p> <p></p>"},{"location":"#idee-du-projet","title":"Id\u00e9e du projet","text":"<p>Pour appliquer cette, nous nous sommes inspir\u00e9s d'un article du magazine Elektor (version fran\u00e7aise) de juillet/ao\u00fbt 2021.</p> <p>L'article propose un projet de labo: LoRa avec le Raspbery Pi Pico, S'amuser avec MicroPython. Le projet consiste \u00e0 capter des temp\u00e9ratures, de les transmettre via un r\u00e9seau LoRaWAN. Ensuite, le flux de donn\u00e9es est r\u00e9cup\u00e9r\u00e9 en temps r\u00e9el gr\u00e2ce \u00e0 un service MQTT pour \u00eatre affich\u00e9 sur une interface web Node-RED fonctionnant sur un Raspberry Pi.</p> <p></p>"},{"location":"#application-generale-du-projet","title":"Application g\u00e9n\u00e9rale du projet","text":"<p>Ce genre de projet est classique en IoT. La valeur provient de la gestion de donn\u00e9es. Une fois l'infrastructure en place, les donn\u00e9es capt\u00e9es et les autres donn\u00e9es obtenues par calculs \u00e0 la pointe ou dans le tableau de bord permettent de renseigner les utilisateurs \u00e0 des fins de gestions des revenus et des co\u00fbts.</p> <p>Les usages sont nombreux:</p> <ul> <li>mesures automatis\u00e9es,</li> <li>contr\u00f4le des \u00e9tats, de la qualit\u00e9,</li> <li>pr\u00e9vention de pertes, d'accidents,</li> <li>alertes,</li> <li>etc. </li> </ul>"},{"location":"#exemple-dapplication","title":"Exemple d'application","text":"<p>Comme le projet tourne autour de la captation de temp\u00e9rature, nous pourrions implanter le projet dans le contr\u00f4le de la r\u00e9frig\u00e9ration.</p> <p>Des organismes sans buts lucratifs recueillent des denr\u00e9es pour les redonner. Ces organismes fonctionnent aussi avec des dons d'\u00e9quipements. Ils utilisent des appareils de r\u00e9frig\u00e9ration r\u00e9cup\u00e9r\u00e9s dans des \u00e9piceries et des d\u00e9panneurs. Ces appareils en fin de vie peuvent flancher \u00e0 tout moment.</p> <p>Il faut contr\u00f4ler la temp\u00e9rature pour \u00e9viter de perdre inutilement des denr\u00e9es. L'application consiste \u00e0 placer des capteurs dans les appareils pour recueillir des donn\u00e9es. Un tableau de bord (page web) montre ces donn\u00e9es \u00e0 partir d'un PC dans les locaux administratifs des organismes. Le dispositif montre des donn\u00e9es brutes, des statistiques et des alertes.</p> <p>Ce tableau de bord permettrait aux organismes de suivre la situation \u00e0 toute heure et de limiter leurs pertes avec les alertes (une temp\u00e9rature qui passe un seuil ou qui augmente rapidement).</p> <ol> <li> <p>Commun\u00e9ment qualifi\u00e9 de edge computing.\u00a0\u21a9</p> </li> </ol>"},{"location":"description/","title":"Description et diagrammes","text":"<p>Nous avons planifi\u00e9 le projet comme une premi\u00e8re phase \u00e0 un projet plus large. \u00c0 la fin de cette phase, nous devrions avoir un application fonctionnelle. Les phases ult\u00e9rieures ne serviraient qu'\u00e0 am\u00e9liorer l'application.</p>"},{"location":"description/#planification","title":"Planification","text":"<p>Divers protocoles sans-fils sont utilis\u00e9s en IoT; chacun a ses applications, ses avantages et ses faiblesses. LoRa est un protocole qui permet de transmettre de petits d\u00e9bits de donn\u00e9es sur de longues port\u00e9es.</p> <p></p> <p>Le LoRa est tr\u00e8s pris\u00e9 en IoT. Ses avantages sont nombreux. Il est surtout connu pour:</p> <ul> <li>sa faible consommation d'\u00e9nergie et sa longue dur\u00e9e,</li> <li>sa longue port\u00e9e,</li> <li>son faible co\u00fbt de d\u00e9ploiement et</li> <li>sa s\u00e9curit\u00e9</li> </ul> <p></p> <p>Un noeud (node), incluant un microcontr\u00f4leur, un capteur et un \u00e9metteur-r\u00e9cepteur LoRa, consomme peu d'\u00e9nergie.</p> <p></p> <p></p> <p>Un microcontr\u00f4leur de 3V consomme peu d'\u00e9nergie (mesur\u00e9 en mAh); la dur\u00e9e de vie des piles d\u00e9passe 1 an. Avec un syst\u00e8me de recharge par panneau solaire, la dur\u00e9e de vie de la source d'alimentation se compte en ann\u00e9es.1</p> <p>Ensuite, le noeud est ajout\u00e9 \u00e0 un r\u00e9seau LoRaWAN. Il faut mettre en place ce r\u00e9seau.</p> <p></p> <p>Les \u00e9missions d'une centaine de noeuds peuvent \u00eatre capt\u00e9es par une passerelle (gateway). Gr\u00e2ce \u00e0 la longue port\u00e9e du LoRa, un parc de noeuds pourrait s'\u00e9taler sur plusieurs kilom\u00e8tres carr\u00e9s.</p> <p></p> <p>Un passerelle ext\u00e9rieure, de gamme industrielle, situ\u00e9e en hauteur maximise la couverture du r\u00e9seau.</p> <p>Avec un bon param\u00e9trage, une passerelle \u00e0 8 canaux peut g\u00e9rer le trafic de centaines de noeuds. La mise en place d'un r\u00e9seau comptant des noeuds et une passerelle est tr\u00e8s abordable compar\u00e9e \u00e0 d'autres technologies.</p> <p>Il est possible de construire une passerelle simple avec une carte LoRaWAN et un Raspberry Pi.</p> <p></p> <p>Un noeud peut mesurer son environnement chaque minute ou chaque heure, par exemple. \u00c0 intervalles de temps d\u00e9termin\u00e9, possiblement plus \u00e9tendues que les intervalles des mesures, le noeud peut envoyer de petits messages \u00e0 la passerelle comme des listes en MicroPython ou des arrays en C.</p> <p>La passerelle achemine le flux de donn\u00e9es vers des serveurs (applications, r\u00e9seau et s\u00e9curit\u00e9). Il est possible d'h\u00e9berger les serveurs in situ, au coeur du r\u00e9seau LoRaWAN. Cette solution requiert un investissement de base, de l'expertise pour son exploitation et des frais de gestion. La solution de rechange est d'impartir ces responsabilit\u00e9s. La passerelle achemine alors le flux de donn\u00e9es vers des services par Internet: The Things' Network (ouvert), The People's Network (ouvert avec une chaine de blocs), The Things' Industries (payant, pour des usages industriels).</p> <p>Tous les composants d\u00e9crits plus haut ne sont pas des composants de stockage des donn\u00e9es. Les donn\u00e9es doivent \u00eatre r\u00e9cup\u00e9r\u00e9es dans une base de donn\u00e9es quelconque.</p> <p>Consulter le Diagramme de d\u00e9ploiement (LoRa), plus bas.</p>"},{"location":"description/#ajustements","title":"Ajustements","text":"<p>Cependant, la mise en place d'un r\u00e9seau LoRaWAN est un investissement en temps et argent pour des particuliers. Une entreprise dispose de plus de ressources et le LoRa reste abordable compar\u00e9 aux solutions de rechange. Si les \u00e9ch\u00e9anciers sont serr\u00e9s et le budget est limit\u00e9, le LoRa n'est pas la meilleure option pour d\u00e9buter la mise en place d'une chaine IoT.</p> <p>Une passerelle Raspberry Pi co\u00fbte le prix d'un kit Raspberry Pi plus une carte LoRaWAN (entre 150 et 200$C). Or, cette option \u00e9tait en rupture d'inventaire dans les boutiques et chez les fournisseurs en ligne ou le d\u00e9lai d'exp\u00e9dition \u00e9tait tr\u00e8s long (6 semaines). Sinon, il faut se tourner vers des passerelles plus ch\u00e8res (300$C+) ou de gamme industrielle (500$C+). </p> <p>Les autres composants ne sont pas chers et facilement disponibles: un Raspberry Pi Pico (ou un ESP32), un \u00e9metteur-r\u00e9cepteur LoRa et un capteur de temp\u00e9rature se chiffrent \u00e0 moins de 20$C chacun.</p> <p>Le LoRa reste une technologie qui requiert une bonne \u00e9tude pour la faire fonctionner.</p> <p>Afin de d\u00e9marrer plus rapidement et sans trop d\u00e9penser, nous nous sommes tourn\u00e9s vers le WiFi. Le Raspberry Pi Pico est disponible dans une version WiFi/Bluetooth. Ce qui permet d'utiliser un ordinateur comme passerelle pour capter les signaux du Pico. Nous pouvons ensuite envoyer le flux de donn\u00e9es dans la chaine IoT.</p> <p>Consulter le Diagramme de d\u00e9ploiement (WiFi), plus bas. La deux chaines IoT (LoRa vs. WiFi) sont assez similaires. </p>"},{"location":"description/#diagrammes-de-deploiement","title":"Diagrammes de d\u00e9ploiement","text":"<p>Par rapport \u00e0 la chaine IoT de l'article d'Elektor, nous rempla\u00e7ons Node-RED par Streamlit pour construire une interface web.</p> <p></p> <p>La chaine IoT de rechange WiFi permet de d\u00e9marrer plus rapidement sans trop d\u00e9penser d'argent.</p> <p></p> <p>Nous allons \u00e9ventuellement revenir vers le LoRa apr\u00e8s un temps d'\u00e9tude de cette technologie. La chaine IoT sera toujours en place. Il existe d'excellent ouvrages disponibles gratuitement en ligne comme le manuel LoRa - LoRaWAN et l'Internet des Objets de l'Universit\u00e9 Savoie-Mont-Blanc. L'Universit\u00e9 offre aussi des cours sur Udemy. Ce ne sont pas les ressources qui manquent en ligne.</p> <p>Une fois la base de donn\u00e9es en place, elle peut servir \u00e0 davantage qu'\u00e0 alimentation du tableau de bord.</p> <p></p>"},{"location":"description/#diagrammes-dactivite-et-detat","title":"Diagrammes d'activit\u00e9 et d'\u00e9tat","text":"<p>Concentrons-nous sur ce qui se d\u00e9roule \u00e0 chaque bout de la chaine IoT.</p>"},{"location":"description/#raspberry-pi-pico","title":"Raspberry Pi Pico","text":""},{"location":"description/#streamlit","title":"Streamlit","text":""},{"location":"description/#diagrammes-de-classes","title":"Diagrammes de classes","text":""},{"location":"description/#raspberry-pi-pico_1","title":"Raspberry Pi Pico","text":"<p>??? mettre \u00e0 jour, coller les images</p>"},{"location":"description/#streamlit_1","title":"Streamlit","text":"<p>Avec son architecture actuelle, notre site n'est pas optimal:</p> <p>https://toucan-fortune-streamlit-projet-integrateur-01-accueil-0fsbkp.streamlit.app/</p> <p>Nous avons beaucoup appris comment faire les choses et, surtout, quoi \u00e9viter. Le site requiert une refonte.</p> <p>Dans son \u00e9tat actuel, le site n'utilise que de la programmation fonctionnelle (fonctions, constantes, variables, dont les variables session_state de Streamlit).</p> <p>\u00c9tant donn\u00e9 qu'il est possible de mettre le site \u00e0 l'\u00e9chelle pour g\u00e9rer le flux de donn\u00e9es de centaines d'objets, il faut penser construire le site avec de la programmation orient\u00e9e objet (avec des classes). Cela demande un temps de r\u00e9flexion et de planification.</p> <p>Il faudrait consulter des experts du web pour \u00e9tablir les parall\u00e8les entre un autre cadriciel et Streamlit. Ce travail est n\u00e9cessaire pour mieux comprendre la partie back-end qui reste assez opaque. Il est n\u00e9cessaire de construire un site avec une bonne architecture pour assurer un fonctionnement fluide, une bonne exp\u00e9rience utilisateur et \u00e9viter les probl\u00e8mes lors de mise \u00e0 l'\u00e9chelle (scaling).</p>"},{"location":"description/#modele-de-base-de-donnees","title":"Mod\u00e8le de base de donn\u00e9es","text":"<p>Un IoT, il est possible de stocker les donn\u00e9es dans des bases de donn\u00e9es SQL ou NoSLQ. Nous avons choisi MongoDB. </p> <p>Selon l'article en ligne Building with Patterns: A Summary, de MongoDB, il existe divers patrons de conception de collections et de documents.</p> <p></p> <p>Le patron Bucket est pr\u00e9conis\u00e9 en IoT comme d\u00e9montr\u00e9 dans le cours M100 de Mongo University: MongoDB for SQL Pros.</p> <p></p> <p>Le patron pr\u00e9conise: .png - 1 collection pour un parc de noeuds, - 1 document par noeud par m\u00e9trique (temp\u00e9rature, humidit\u00e9, etc.) par jour ou - 1 document par noeud par appareil (noeud 1 de temp\u00e9rature, noeud 2 d'humidit\u00e9, etc.) par jour.</p> <p>\u00c0 des fins exp\u00e9rimentales, nous avons utilis\u00e9 1 collection de 1 document par noeud par m\u00e9trique par mesure. Chaque document consiste en une valeur unique.</p> <p></p> <p>Notre mod\u00e8le de documents g\u00e9n\u00e8re beaucoup de donn\u00e9es rapidement pour tester. Nous pourrions passer au patron Bucket une fois le syst\u00e8me stabilis\u00e9. Chaque document consisterait en une structure de donn\u00e9es pour toutes les mesures de la journ\u00e9e.</p>"},{"location":"description/#experience-avec-le-raspberry-pi-pico","title":"Exp\u00e9rience avec le Raspberry Pi Pico","text":""},{"location":"description/#developpement","title":"D\u00e9veloppement","text":"<p>Pour le d\u00e9veloppement, Windows n'a pas les pilotes de la connexion en s\u00e9rie (Serial USB) afin de se connecter au Pico et de t\u00e9l\u00e9verser des codes sources en MicroPython. Le d\u00e9veloppement pr\u00e9paratoire peut se faire en Windows, mais pour embarquer un code source sur le Pico, il faut le faire avec une distribution Linux. Nous avons utilis\u00e9 la distribution Linux Mint avec une machine virtuelle sur Windows.</p> <p></p> <p>Notre but est que le Pico envoie des donn\u00e9es \u00e0 MongoDB Atlas. Par contre, nous pouvons simuler des donn\u00e9es sur Windows et t\u00e9l\u00e9verser des donn\u00e9es avec Compass, via des fichiers CSV ou JSON ou directement avec le module pymongo.</p> <p>Avec le Pico, il faut passer par un serveur MQTT (Mosquitto) install\u00e9 sur un ordinateur Windows. Le Pico, via le WiFi, communique avec le serveur sur le PC. Le PC achemine le flux de donn\u00e9es \u00e0 un service MQTT: MyQttHub.</p> <p>Nous aurions voulu tester le service HiveMQ, mais nous n'avons pas eu le temps.</p> <p>Ensuite, le service MyQttHub envoie le flux de donn\u00e9es \u00e0 MongoDB Atlas.</p> <p>Nous aurions \u00e9galement voulu tester le service PubNub; une solution de rechange \u00e0 MyQttHub. Nous n'avons pas eu le temps.</p> <p>Nous voulions garder de la marge de manoeuvre avec plusieurs possibilit\u00e9s \u00e0 chaque \u00e9tape de la chaine. Si une option flanchait, l'autre option deviendrait utile.</p>"},{"location":"description/#difficultes","title":"Difficult\u00e9s","text":"<p>Les premiers tests avec notre capteur temp\u00e9rature-humidit\u00e9 SEN0546 n'ont pas \u00e9t\u00e9 concluants.</p> <p></p> <p>D'abord, les informations sur ce capteur sont confuses.</p> <p>Ensuite les broches pour la connexion posent un autre probl\u00e8me. </p> <p></p> <p></p> <p>Desquelles est-il question? Physiques ou GPIO? Internet tout entier n'en parle pas. La seule documentation qui en fait allusion est le guide Get Started with MicroPython on Raspberry Pi Pico.</p> <p>Le MicroPython est bas\u00e9 sur une version ancienne de Python (3.4 ou 3.5). Comme le nom l'indique, c'est un sous-ensemble du langage complet pour microcontr\u00f4leurs. La syntaxe est l\u00e9g\u00e8rement diff\u00e9rente (suffisamment pour causer de s\u00e9rieux probl\u00e8mes).</p> <p>Il faut adapter un code source Python en MicroPython lorsque l'on migre. Nous pouvons \u00e9prouver le sentiment d'\u00eatre handicap\u00e9 par les limites du MicroPython. Le MicroPython ne reconnait pas ou n'importe pas certaines variables, classes ou m\u00e9thodes. Certains modules ne sont pas disponibles. L'affichage par <code>print()</code> est erratique; parfois effac\u00e9. </p> <p>La m\u00e9moire du Pico est aussi probl\u00e9matique. Un code source peut persister en m\u00e9moire m\u00eame si le d\u00e9veloppeur fait une mise \u00e0 jour. Il faut d\u00e9couvrir la solution: fermer Thonny, d\u00e9brancher le Pico et red\u00e9marrer le tout avant de t\u00e9l\u00e9verser un nouveau code source.</p> <p>Est-ce un probl\u00e8me avec Thonny ou le Pico? Internet tout entier n'en parle pas.</p> <p>Au final, nous sommes arriv\u00e9s au verdict qu'en MicroPython, les options de programmation sont limit\u00e9es. Il n'a pas \u00e9t\u00e9 possible de faire fonctionner le capteur correctement. Le capteur fournissait toujours des valeurs maximales, par exemple.</p> <p>Le MicroPython n'est pas le choix id\u00e9al pour le protocole I2C. Le langage n'offre pas les op\u00e9rations de bas niveau (proche du processeur) comme offertes par le C/C++.</p> <p>En MicroPython, il aurait fallu utiliser un autre capteur. Il existe des mod\u00e8les de capteurs plus simples.</p> <p>Le capteur de temp\u00e9rature TMP37FT9Z.</p> <p></p> <p>Les capteurs de temp\u00e9rature et d'humidit\u00e9 AM2320, DHT20 ou DHT11.</p> <p></p> <p>Peu importe le capteur, le C/C++ aurait \u00e9t\u00e9 un meilleur langage pour avoir plus de marge de d\u00e9veloppement. M\u00eame qu'une solution de rechange au Pico, comme le ESP32, avec du C/C++, aurait \u00e9t\u00e9 encore meilleure. Le ESP32 vient aussi dans une version WiFi comme le Pico.</p> <p></p> <p>L'envoi de donn\u00e9es du Pico vers MongoDB Atlas a r\u00e9v\u00e9l\u00e9 quelques surprises, dont les quotas journaliers qui limitaient le flux de donn\u00e9es avec le service MQTT???. Avec un compte gratuit, il existe un quota sur le nombre d'envois par jour et des d\u00e9lais de 250ms par envoi. Parfois l'envoi ne passe pas.</p> <p>Pour le d\u00e9veloppement, les tests, cette situation est probl\u00e9matique.</p> <p>Au premier abord, nous \u00e9tions perplexes devant la situation. Compte tenu de tous les probl\u00e8mes discut\u00e9s plus haut, nous pensions qu'il s'agissait d'un autre probl\u00e8me avec le Pico ou avec la programmation en MicroPython. \u00c9tait-ce le serveur MQTT sur le PC? Nous n'avions pas ces probl\u00e8mes lorsque nous travaillions directement avec MongoDB Atlas; avec Compass ou avec un code source Python (avec le module pymongo) sur PC.</p> <p>Toutes ces p\u00e9rip\u00e9ties nous ont fait perdre beaucoup de temps de d\u00e9veloppement.</p> <p>Pour cette phase du projet, nous avions des ambitions de calculs \u00e0 la pointe avec les donn\u00e9es brutes: moyennes, contr\u00f4le de flux \u00e0 certaines temp\u00e9ratures, alertes, etc. Toutes ces donn\u00e9es constituent des envois diff\u00e9rents \u00e0 la base de donn\u00e9es. La valeur obtenue r\u00e9side dans le fait que l'objet fait une bonne partie de l'analytique et ne fait pas qu'\u00e9mettre des donn\u00e9es brutes.</p> <p>L'investissement de temps \u00e0 r\u00e9gler des probl\u00e8mes nous a fait reculer sur d'autres options: HiveMQ et PubNub.</p>"},{"location":"description/#succes","title":"Succ\u00e8s","text":"<p>Chaque probl\u00e8me, de la programmation au service MQTT, a \u00e9t\u00e9 surmont\u00e9. Nous devions travailler avec le Pico en MicroPython pour terminer la phase du projet. Adopter le C/C++, un autre microcontr\u00f4leur et/ou un autre capteur serait pour une phase ult\u00e9rieure.</p> <p>Gr\u00e2ce au capteur de temp\u00e9rature int\u00e9gr\u00e9 au Pico, il est possible de capter une temp\u00e9rature pour l'envoyer \u00e0 MongoDB Atlas.</p> <p>Il est aussi possible de simuler des donn\u00e9es de temp\u00e9rature et d'humidit\u00e9 avec le Pico avec de simples algorithmes; et de simuler plusieurs noeuds (pico01, pico02, etc.).</p> <p>Une fois le syst\u00e8me stabilis\u00e9, il est facile de retourner vers le serveur et le service MQTT; et de respecter les quotas.</p>"},{"location":"description/#conclusion","title":"Conclusion","text":"<p>Le Raspberry Pi Pico est abordable et facile \u00e0 apprendre. Le MicroPython aussi.</p> <p>D'un autre c\u00f4t\u00e9, le MicroPython, en termes de possibilit\u00e9s de d\u00e9veloppement, est limit\u00e9. Le langage est limit\u00e9 et son manque de paquets est limitatif. Le Pico doit aussi \u00eatre programm\u00e9 via un syst\u00e8me d'exploitation Linux et non Windows ou Mac OS X.</p> <p>Toutes les \u00e9tapes se sont av\u00e9r\u00e9es beaucoup plus longues que pr\u00e9vu en raison des obstacles que nous affrontions. Il y a beaucoup de  recherches (blogues, documentation en ligne, sites, tutoriels, etc.) et de lectures \u00e0 faire pour s'initier \u00e0 la nouvelle mati\u00e8re; non seulement le LoRa, mais toutes les nouvelles technologies.</p> <p>Voil\u00e0 ce qui explique l'abandon de bien d\u2019items que nous avions pr\u00e9vu faire au d\u00e9but du projet.</p> <p>Il aurait fallu consulter des experts avant d'arr\u00eater nos choix: du microcontr\u00f4leur, du capteur, du langage de programmation, etc. Il existe toute sorte de crit\u00e8res \u00e0 \u00e9valuer avant d'embarquer dans un projet: co\u00fbts, potentiel de programmation, performance, durabilit\u00e9, consommation d'\u00e9nergie, etc. Nous l'avons appris \u00e0 la dure.</p> <p>C'est quand m\u00eame une formidable exp\u00e9rience d'apprentissage. Beaucoup de nouvelles technologies et de pr\u00e9cieuses le\u00e7ons de d\u00e9veloppement.</p> <p>Malgr\u00e9 que nous n'avons pas compl\u00e9t\u00e9 les exigences du produit final, nous avons une base solide qui nous servira lors des prochaines phases.</p> <p>Nous aimerions essayer:</p> <ul> <li>Websocket pour la communication directe entre le microcontr\u00f4leur et le PC (ou 2 PC); une sorte de LAN.</li> <li>HiveHQ</li> <li>PubNub</li> <li>Un autre microcontr\u00f4leur et/ou le langage C/C++ pour faire fonctionner le protocole I2C avec le capteur de temp\u00e9rature.</li> <li>Une mise \u00e0 l'\u00e9chelle de 1 microcontr\u00f4leur \u00e0 3 (ou plus) microcontr\u00f4leurs.</li> <li>LoRa et LoRaWAN.</li> <li>Ajuster le tableau de bord dans ces nouvelles conditions.</li> </ul>"},{"location":"description/#experience-avec-streamlit","title":"Exp\u00e9rience avec Streamlit","text":"<p>Nous n'avons pas utilis\u00e9 Node-RED. C'est un langage de programmation assez sommaire pour d\u00e9velopper des preuves de concept rapidement.</p> <p></p> <p>Nous avons aussi regard\u00e9 Grafana et Flutter.</p> <p>Nous voulions une solution avec langages \u00e9crits permettant plus de possibilit\u00e9s.</p> <p>Nous avons pens\u00e9 opter pour le cadriciel Python Flask pour construire un site web avec les langages web (HTML, CSS, JS).</p> <p>Nous avons alors trouv\u00e9 Streamlit.</p>"},{"location":"description/#developpement_1","title":"D\u00e9veloppement","text":"<p>Streamlit est un module Python qui permet de construire des sites web et d'y incorporer facilement des modules scientifiques comme Numpy, Pandas, des modules de Machine Learning et d'IA. Il est possible d'y injecter un peu de HTML et de CSS. Le JS est int\u00e9gr\u00e9 dans le code Python du module Streamlit; comme les fonctions asynchrones (callback), les \u00e9tats (state) et les changements d'\u00e9tats (setState).</p> <p>Le r\u00e9sultat donne un site web r\u00e9actif qui s'adapte \u00e0 n'importe quel \u00e9cran.</p> <p>Le d\u00e9marrage avec Streamlit est facile. Nous sommes rapidement arriv\u00e9s \u00e0 construire des sites web exp\u00e9rimentaux pour apprendre les composants du module. Il est possible d'\u00e9muler le travail sur un ordinateur.</p>"},{"location":"description/#difficultes_1","title":"Difficult\u00e9s","text":"<p>La suite a \u00e9t\u00e9 plus ardue. Il faut du temps, plus que pr\u00e9vu, pour apprendre un gros module comme Streamlit. Cela fait partie des risques d'aller vers les nouveaut\u00e9s.</p> <p>Tout est pr\u00e9vu avec Streamlit pour connecter un site \u00e0 des sources de donn\u00e9es sur l'ordinateur ou sur le web. Nous avons pass\u00e9 un certain temps \u00e0 maitriser la connexion entre Streamlit et MongoDB Atlas et, surtout, \u00e0 la s\u00e9curiser.</p> <p>Les aspects de fonctions asynchrones (callback) et d'\u00e9tats (state) ont aussi pris un certain temps \u00e0 maitriser.</p>"},{"location":"description/#succes_1","title":"Succ\u00e8s","text":"<p>Le r\u00e9sultat donne un site interactif de grande qualit\u00e9. Les fonctionnalit\u00e9s de Streamlit permettent on bonne personnalisation, mais nous nous sommes limit\u00e9 \u00e0 un gabarit assez standard.</p> <p>Streamlit n'est pas un cadriciel de site web complet. Il est sp\u00e9cialis\u00e9 dans la construction d'interfaces web de pr\u00e9sentation et d'interaction en science des donn\u00e9es, en Machine Learning, en IA, en statistiques, en visualisation et toute autre utilisation connexe. L'offre de widgets d'interaction et d'options d'affichage colle \u00e0 ces utilisations.</p> <p>La connexion avec MongoDB Atlas est robuste et peut \u00eatre s\u00e9curis\u00e9e. Les extractions sont fluides. Le NoSQL s'av\u00e8re un excellent choix qui donne aussi une flexibilit\u00e9 pour changer le mod\u00e8le des documents en cours de route. Choses plus ardue avec le SQL qui est rigide. Nous n'avons pas test\u00e9 de gros volumes et nous nous limit\u00e9 \u00e0 moins de 3000 documents par collection.</p> <p>Nous avons ensuite r\u00e9ussi \u00e0 h\u00e9berger le site en ligne pour le rendre accessible au grand public avec Streamlit Cloud. Il faut utiliser un fichier requirements.txt pour que Streamlit Cloud construise une version de notre site dans un environnement virtuel sur le nuage. Nous avons pens\u00e9 tester Heroku, mais ce sera pour plus tard.</p>"},{"location":"description/#conclusion_1","title":"Conclusion","text":"<p>Apr\u00e8s de multiples tentatives, nous avons r\u00e9ussi \u00e0 terminer un site:</p> <ul> <li>multipages,</li> <li>interactif, avec menus et s\u00e9lections,</li> <li>avec une connexion \u00e0 MongoDB Atlas,</li> <li>pr\u00e9sentant des donn\u00e9es avec tableaux et graphiques et</li> <li>avec un page de connexion en temps r\u00e9el pour des mises \u00e0 jour \u00e0 intervalles r\u00e9guliers (lorsque de nouvelles donn\u00e9es entrent dans Atlas, elles peuvent \u00eatre pr\u00e9sent\u00e9es).</li> </ul> <p>L'architecture n'est pas optimale par manque d'exp\u00e9rience. Le site peut \u00eatre lent, peu r\u00e9actif dans certains cas. Il manque aussi beaucoup de fonctionnalit\u00e9s que nous avons abandonn\u00e9es par manque de temps.</p> <p>Streamlit offre un grand potentiel, mais requiert plus d'exp\u00e9rience pour le maitriser.</p> <ol> <li> <p>LoRa, Sigfox, NB-LET sont des protocoles de la famille Low Power WAN ou LPWAN.\u00a0\u21a9</p> </li> </ol>"},{"location":"references/","title":"R\u00e9f\u00e9rences","text":""},{"location":"references/#fiches-techniques","title":"Fiches Techniques","text":"<ul> <li>\"RP002-1.0.3 LoRaWAN\u00ae Regional Parameters\" (5 mai, 2021) \"( CHT8305 ) Digital Humidity &amp; Temperature Sensor\" (octobre 2017, Rev. 1.1) SENSYLINK Microelectronics Co., LTD</li> </ul>"},{"location":"references/#livres-et-documents-pdf","title":"Livres et Documents PDF","text":"<ul> <li>\"Connecting to the Internet with Raspberry Pi Pico W\" (novembre, 2022)</li> <li>\"Getting started with Raspberry Pi Pico\" (novembre, 2022)</li> <li>\"MicroPython Documentation\" (13 janvier, 2023)</li> <li>\"Raspberry Pi Pico Python SDK\" (novembre, 2022)</li> <li>\"Get started with MicroPython on Raspberry Pi Pico\", par Gareth Halfacree and Ben Everard, Raspberry Pi PRESS (THE OFFICIAL RASPBERRY PI PICO GUIDE)</li> <li>Building with Patterns: A Summary, de MongoDB</li> </ul>"},{"location":"references/#articles-de-magazines","title":"Articles de magazines","text":"<ul> <li>Make: \"GO LONG! Need to monitor remote sensors on your next project. LoRa might be your best wireless bet.\" par Andreas Spiess (makeprojects.com)</li> <li>Elektor: \"LoRa avec le Raspberry Pi Pico - S'amuser avec MicroPython\" (mars/avril 2020) (www.elektormagazine.fr)<ul> <li>https://github.com/ElektorLabs/210047-LoRa-with-the-Raspberry-Pi-Pico</li> </ul> </li> <li>Elektor: \"LoRaWan: d\u00e9collage facile - Avec Blue Pil, passerelle LoRa et The Things Network\" (juillet/ao\u00fbt 2021) (www.elektormagazine.fr)</li> </ul>"},{"location":"references/#electronique","title":"Electronique","text":"<ul> <li>https://onlinedocs.microchip.com/pr/GUID-61202E6F-BC03-4D81-AAB9-269E87F9B49C-en-US-15/index.html?GUID-45D0726D-4F75-4875-96B2-876AF5F2EDB2</li> <li>https://www.electricaltechnology.org/2020/04/electrical-electronic-abbreviations-full-forms.html</li> <li>https://docs.micropython.org/en/latest/esp8266/tutorial/onewire.html</li> <li>https://learn.adafruit.com/working-with-i2c-devices/pull-up-resistors</li> <li>https://www.electronics-tutorials.ws/logic/pull-up-resistor.html</li> <li>https://en.wikipedia.org/wiki/1-Wire</li> <li>https://micropython-lego-ri5.readthedocs.io/en/latest/library/_onewire.html</li> <li>https://www.build-electronic-circuits.com/pull-up-resistor/</li> <li>https://woopcb.com/blog/what-is-vcc-vss-vdd-vee-in-electronics</li> <li>https://control.com/technical-articles/what-is-baud-rate-and-how-does-it-work/</li> <li>https://electronics.stackexchange.com/questions/44670/what-is-bit-banging</li> <li>https://circuitdigest.com/article/introduction-to-bit-banging-spi-communication-in-arduino-via-bit-banging</li> <li>https://mpython.readthedocs.io/en/master/library/micropython/onewire.html</li> </ul>"},{"location":"references/#helium","title":"Helium","text":"<ul> <li>https://www.okdo.com/getting-started/get-started-with-helium-network/#h-0-step-1-helium-toc</li> <li>https://www.helium.com/</li> <li>https://www.helium-iot.eu/</li> <li>https://www.reddit.com/r/HeliumNetwork/comments/uyvmis/hip51_and_why_its_important_for_hnt/</li> </ul>"},{"location":"references/#hivemq","title":"HiveMQ","text":"<ul> <li>https://www.hivemq.com/downloads/hivemq/</li> <li>https://www.hivemq.com/blog/mqtt-toolbox-mqtt-spy/</li> <li>https://www.hivemq.com/mqtt-toolbox/</li> <li>https://www.hivemq.com/public-mqtt-broker/</li> <li>https://www.hivemq.com/docs/hivemq/4.10/user-guide/system-requirements.html#os</li> </ul>"},{"location":"references/#i2c","title":"I2C","text":"<ul> <li>https://stackoverflow.com/questions/45008131/how-can-i-read-unsigned-shorts-using-python https://realpython.com/python-bitwise-operators/#overview-of-pythons-bitwise-operators</li> <li>https://docs.micropython.org/en/latest/library/machine.I2C.html</li> <li>https://en.wikipedia.org/wiki/Endianness</li> <li>https://stackoverflow.com/questions/5030919/how-to-read-write-binary-16-bit-data-in-python-2-x</li> <li>https://mipea.readthedocs.io/en/latest/i2c.html</li> <li>https://i2c.info/</li> <li>https://learn.adafruit.com/micropython-hardware-i2c-devices/i2c-main</li> <li>https://core-electronics.com.au/i2c-temperature-humidity-sensor-stainless-steel-shell.html</li> <li>https://wiki.dfrobot.com/SKU_SEN0546_I2C_Temperature_and_Humidity_Sensor_Stainless_Steel_Shell</li> <li>https://www.digikey.com/en/maker/projects/raspberry-pi-pico-rp2040-i2c-example-with-micropython-and-cc/47d0c922b79342779cdbd4b37b7eb7e2</li> <li>https://www.i2c-bus.org/i2c-Interface/</li> <li>https://www.waveshare.com/wiki/%E3%80%90MicroPython%E3%80%91machine.I2C_Function</li> <li>https://learn.adafruit.com/working-with-i2c-devices/terminology</li> </ul>"},{"location":"references/#lora","title":"LoRa","text":"<ul> <li>https://www.loraantenna.com/lorawan-frequency-plans-by-country-region/</li> <li>https://www.nexpcb.com/lorawan-selection-guide</li> <li>https://www.nexpcb.com/blog/lorawan-country-coverage</li> <li>https://github.com/ElektorLabs/210047-LoRa-with-the-Raspberry-Pi-Pico/blob/main/Software/lora.py</li> </ul>"},{"location":"references/#micropython","title":"MicroPython","text":"<ul> <li>https://github.com/micropython/micropython</li> <li>https://stackoverflow.com/questions/75089980/convert-a-bytes-string-to-dictionary-in-python</li> <li>https://docs.micropython.org/en/latest/genrst/core_language.html</li> <li>https://docs.micropython.org/en/latest/library/index.- html#python-standard-libraries-and-micro-libraries</li> <li>https://how2electronics.com/micropython-ds18b20-temperature-sensor-esp32/</li> <li>https://docs.micropython.org/en/latest/</li> <li>https://stackoverflow.com/questions/57982782/type-codes-in-python-for-array</li> <li>https://docs.micropython.org/en/latest/esp8266/tutorial/dht.html</li> <li>https://docs.micropython.org/en/latest/esp8266/tutorial/repl.html</li> <li>https://docs.micropython.org/en/latest/rp2/quickref.html#delay-and-timing</li> <li>https://zetcode.com/python/bytes-type/</li> <li>https://micropython-usermod.readthedocs.io/en/latest/usermods_09.html</li> <li>https://www.educative.io/answers/what-are-type-codes-in-python</li> <li>https://stackoverflow.com/questions/52808481/unpack-unsigned-short-in-python</li> <li>https://wiki.micropython.org/gollum/Importing-Modules</li> <li>https://docs.python.org/3/library/ctypes.html</li> <li>http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html</li> </ul>"},{"location":"references/#mongodb","title":"MongoDB","text":"<ul> <li>https://pymongo.readthedocs.io/en/stable/api/pymongo/mongo_client.html#pymongo.mongo_client.MongoClient</li> <li>https://www.mongodb.com/docs/drivers/pymongo/</li> <li>https://pypi.org/project/pymongo/</li> <li>Mongo University, M100, MongoDB for SQL Pros</li> </ul>"},{"location":"references/#mqtt","title":"MQTT","text":"<ul> <li>http://www.steves-internet-guide.com/mqtt/</li> <li>https://www.mosquitto.org/download/</li> <li>https://www.eclipse.org/paho/index.php?page=clients/c/index.php</li> <li>https://mqtt.org/getting-started/</li> <li>https://github.com/kamilfb/mqtt-spy/wiki/GettingStarted</li> <li>https://stackoverflow.com/questions/56455358/how-to-build-paho-mqtt-c-on-windows</li> <li>http://www.steves-internet-guide.com/into-mqtt-python-client/</li> <li>https://www.mosquitto.org/man/mosquitto-8.html</li> <li>https://stackoverflow.com/questions/26716279/how-to-test-the-mosquitto-server</li> <li>https://medium.com/python-point/mqtt-basics-with-python-examples-7c758e605d4</li> <li>https://mqtt.org/mqtt-specification/</li> <li>https://myqtthub.com/en</li> <li>https://github.com/kamilfb/mqtt-spy/wiki/Overview</li> <li>https://pypi.org/project/paho-mqtt/</li> <li>https://mqtt.org/software/</li> </ul>"},{"location":"references/#raspberry-pi-pico","title":"Raspberry Pi Pico","text":"<ul> <li>https://www.raspberrypi.com/tutorials/</li> <li>https://www.raspberrypi.com/documentation/microcontrollers/</li> <li>https://datasheets.raspberrypi.com/rp2040/rp2040-product-brief.pdf</li> <li>https://github.com/micropython/micropython/wiki/Differences</li> <li>https://github.com/dhylands/rshell</li> <li>https://learn.adafruit.com/micropython-basics-how-to-load-micropython-on-a-board/serial-terminal</li> <li>https://www.chiark.greenend.org.uk/~sgtatham/putty/</li> <li>https://realpython.com/lessons/repl-workflow/</li> <li>https://codewith.mu/en/tutorials/1.0/repl</li> <li>https://picockpit.com/raspberry-pi/raspberry-pi-pico-and-micropython-on-windows/</li> <li>https://zadig.akeo.ie/downloads/</li> <li>https://zadig.akeo.ie/</li> <li>https://learn.microsoft.com/en-us/windows-hardware/drivers/usbcon/usb-driver-installation-based-on-compatible-ids</li> <li>https://electrocredible.com/raspberry-pi-pico-tutorial-for-beginners/</li> <li>https://electrocredible.com/raspberry-pi-pico-i2c-tutorial-examples/</li> <li>https://electrocredible.com/raspberry-pi-pico-temperature-sensor-tutorial/</li> <li>https://raspberrypi.github.io/pico-sdk-doxygen/group__hardware__i2c.html</li> <li>https://www.youtube.com/watch?v=__v2P_RmXSY</li> <li>https://www.etechnophiles.com/raspberry-pi-pico-pinout-specifications-datasheet-in-detail/</li> <li>https://raspberrytips.com/raspberry-pi-pico-pinout/</li> </ul>"},{"location":"references/#pubnub","title":"PubNub","text":"<ul> <li>https://www.pubnub.com/docs</li> <li>https://www.pubnub.com/docs/sdks/javascript/</li> <li>https://www.pubnub.com/docs/sdks/python</li> <li>https://www.pubnub.com/docs/sdks/python/api-reference/mobile-push</li> <li>https://www.pubnub.com/blog/realtime-mongodb-to-fetch-and-stream-report-data/</li> <li>https://www.pubnub.com/docs/sdks/javascript/api-reference/publish-and-subscribe</li> <li>https://www.pubnub.com/docs/sdks/python/api-reference/publish-and-subscribe</li> <li>https://www.pubnub.com/docs/sdks/python/api-reference/configuration</li> </ul>"},{"location":"references/#python-streamlit-plotly","title":"Python, Streamlit, Plotly","text":"<ul> <li>https://numpy.org/doc/stable/</li> <li>https://pandas.pydata.org/docs/index.html</li> <li>https://docs.streamlit.io/</li> <li>https://daniellewisdl-streamlit-cheat-sheet-app-ytm9sg.streamlit.app/</li> <li>https://www.youtube.com/playlist?list=PLM8lYG2MzHmRpyrk9_j9FW0HiMwD9jSl5</li> <li>https://plotly.com/python/</li> </ul>"},{"location":"sources/","title":"Codes sources et outils","text":""},{"location":"sources/#codes-sources","title":"Codes sources","text":"<p>La majorit\u00e9 des codes sources se trouvent sur GitHub.</p> <p>Sur certains d\u00e9p\u00f4ts, il y a aussi des liens vers un site web.</p> <ul> <li>Par exemple, le d\u00e9p\u00f4t du Tableau de bord Streamlit<ul> <li>Le site Streamlit</li> </ul> </li> <li>Le d\u00e9p\u00f4t de la documentation de conception avec MkDocs<ul> <li>Le site MkDocs</li> </ul> </li> </ul>"},{"location":"sources/#codes-sources-uml","title":"Codes sources UML","text":"<p>Les diagrammes ont \u00e9t\u00e9 r\u00e9alis\u00e9s avec PlantUML avec leur interface en ligne et leur document PDF. Voici les codes utilis\u00e9s.</p>"},{"location":"sources/#diagrammes-de-deploiement","title":"Diagrammes de d\u00e9ploiement","text":"<p>deployment diagrams</p>"},{"location":"sources/#wifi","title":"WiFi","text":"<pre><code>@startuml\nTitle \"Diagramme de d\u00e9ploiement (WiFi)\"\n'----------\n'NOEUDS\n'----------\nnode \"Noeud\" {\n  [\"Capteur \\n(temp\u00e9rature, humidit\u00e9; cam\u00e9ra)\"] #Darkorange/white \n  [\"RPi Pico \\n(avec WiFi et BLE)\"] #Indianred/white\n  note right : Analyses \\n\\n(ou Teensy et \\nTinyML potentiel)\n  (\"de l'ordinateur\") #DarkGray\n}\n\nnode \"PC ou autre \\nservant de passerelle\" {\n  [\"serveur \\nMQTT\"] #Khaki/white\n}\n\ncloud Internet/Infonuagique #LightCyan {\n  [\"service \\nMQTT\"] #DodgerBlue/white\n  database \"MongoDB Atlas\" #Yellowgreen/white {\n    collections \"Documents\" #Greenyellow/white\n  }\n  database GitHub #Green/white {\n    collections \"repo Tableau\" #Seagreen/white\n  }\n  cloud \"Streamlit Cloud\" #Cyan {\n    [\"Tableau \\nde bord\"] #Seagreen/white\n  }\n}\n\nnode \"Poste de d\u00e9veloppement\" {\n  package \"Streamlit\" #Magenta/white {\n    [\"projet Tableau\"] #Violet/white\n  }\n  package \"Thonny\" #Magenta/white {\n    [\"Programmes \\nMicroPython\"] #Violet/white\n  }\n  (\"vers le MCU\") #DarkGray\n  note right: aussi \\nEDI et programme C/C++\n}\n'----------\n'LIENS\n'----------\n[\"Capteur \\n(temp\u00e9rature, humidit\u00e9; cam\u00e9ra)\"] &lt;--&gt; [\"RPi Pico \\n(avec WiFi et BLE)\"] : GPIO: num\u00e9rique ou analoqique\n(\"de l'ordinateur\") --&gt; [\"RPi Pico \\n(avec WiFi et BLE)\"] : USB\n[\"RPi Pico \\n(avec WiFi et BLE)\"] &lt;.-&gt; [\"serveur \\nMQTT\"]: WiFi\n\n[\"serveur \\nMQTT\"] .-&gt; [\"service \\nMQTT\"] : IP\n\n[\"service \\nMQTT\"] .-&gt; \"Documents\" : IP\n\"Documents\" .-&gt; [\"projet Tableau\"] : IP\n[\"projet Tableau\"] &lt;.-&gt; \"repo Tableau\" : IP/git\n\"repo Tableau\" .--&gt; [\"Tableau \\nde bord\"]: IP\n\"Documents\" .-&gt; [\"Tableau \\nde bord\"] : API\n\n[\"Programmes \\nMicroPython\"] --&gt; (\"vers le MCU\") : USB\n\n@enduml\n</code></pre>"},{"location":"sources/#lora","title":"LoRa","text":"<pre><code>@startuml\nTitle \"Diagramme de d\u00e9ploiement (LoRa)\"\n'----------\n'NOEUDS\n'----------\nnode \"Noeud\" {\n  [\"Capteur \\n(temp\u00e9rature, humidit\u00e9; cam\u00e9ra)\"] #Darkorange/white \n  [\"RPi Pico \\n(avec WiFi et BLE)\"] #Indianred/white\n  note right : Analyses \\n\\n(ou Teensy et \\nTinyML potentiel)\n  (\"de l'ordinateur\") #DarkGray\n  [\"\u00e9metteur-transmetteur \\nLoRa\"] #Darkorange/white\n}\n\nnode \"Passerelle\" {\n  [LoRaWAN] #Khaki/white\n}\n\ncloud Internet/Infonuagique #LightCyan {\n  [\"The \\nThings \\nNetwork\"] #DodgerBlue/white\n  database \"MongoDB Atlas\" #Yellowgreen/white {\n    collections \"Documents\" #Greenyellow/white\n  }\n  database GitHub #Green/white {\n    collections \"repo Tableau\" #Seagreen/white\n  }\n  cloud \"Streamlit Cloud\" #Cyan {\n    [\"Tableau \\nde bord\"] #Seagreen/white\n  }\n}\n\nnode \"Poste de d\u00e9veloppement\" {\n  package \"Streamlit\" #Magenta/white {\n    [\"projet Tableau\"] #Violet/white\n  }\n  package \"Thonny\" #Magenta/white {\n    [\"Programmes \\nMicroPython\"] #Violet/white\n  }\n  (\"vers le MCU\") #DarkGray\n  note right: aussi \\nEDI et programme C/C++\n}\n'----------\n'LIENS\n'----------\n[\"Capteur \\n(temp\u00e9rature, humidit\u00e9; cam\u00e9ra)\"] &lt;--&gt; [\"RPi Pico \\n(avec WiFi et BLE)\"] : GPIO: num\u00e9rique ou analoqique\n(\"de l'ordinateur\") --&gt; [\"RPi Pico \\n(avec WiFi et BLE)\"] : USB\n[\"RPi Pico \\n(avec WiFi et BLE)\"] &lt;--&gt; [\"\u00e9metteur-transmetteur \\nLoRa\"] : GPIO: UART ou SPI?\n\n[\"\u00e9metteur-transmetteur \\nLoRa\"] &lt;.-&gt; [LoRaWAN]: RF\n[LoRaWAN] &lt;.-&gt; [\"The \\nThings \\nNetwork\"] : IP\n\n[\"The \\nThings \\nNetwork\"] .-&gt; \"Documents\" : MQTT?\n\"Documents\" .-&gt; [\"projet Tableau\"] : IP\n[\"projet Tableau\"] &lt;.-&gt; \"repo Tableau\" : IP/git\n\"repo Tableau\" .--&gt; [\"Tableau \\nde bord\"]: IP\n\"Documents\" .-&gt; [\"Tableau \\nde bord\"] : IP\n\n[\"Programmes \\nMicroPython\"] --&gt; (\"vers le MCU\") : USB\n\n@enduml\n</code></pre>"},{"location":"sources/#plus","title":"Plus","text":"<pre><code>@startuml\nTitle \"Diagramme de d\u00e9ploiement\"\n'----------\n'NOEUDS\n'----------\ncloud Internet/infonuagique #LightCyan {\n  database \"MongoDB Atlas\" #Yellowgreen/white {\n    collections \"Documents\" #Greenyellow/white\n  }\n}\n\nnode \"Poste de d\u00e9veloppement\" {\n  package \"pymongo \\nNumpy-Pandas \\nvisualisation... \\nScikit-Learn, statsmodels...\" #Magenta/white {\n    [\"Analyses et \\nML potentiel\"] #Violet/white\n  }\n  package \"Streamlit\" #Magenta/white {\n    [\"projets\"] #Violet/white\n  }\n}\n'----------\n'LIENS\n'----------\n\"Documents\" &lt;.-&gt; [\"Analyses et \\nML potentiel\"] : IP\n[\"Analyses et \\nML potentiel\"] -&gt; [\"projets\"]\n\n@enduml\n</code></pre>"},{"location":"sources/#diagrammes-dactivite","title":"Diagrammes d'activit\u00e9","text":"<p>activity diagrams</p>"},{"location":"sources/#rpi-pico","title":"RPi Pico","text":"<p>Diagramme r\u00e9el</p> <pre><code>@startuml\nrepeat\n  partition Capteur {\n    :Mesurer;\n  }\n  partition RPi Pico {\n    :Recevoir;\n    :Envoyer donn\u00e9es \\n\u00e0 passerelle WiFi;\n  }\nrepeat while (Intervalle de temps \\nparam\u00e9tr\u00e9) is (nouveau \\ncycle)\nstop\n@enduml\n</code></pre> <p>Diagramme planifi\u00e9</p> <pre><code>repeat\n  partition Capteur {\n    :Mesurer;\n  }\n  partition RPi Pico {\n    :Recevoir et \\nenregistrer mesures \\nen m\u00e9moire flash;\n    :Analyser mesures et \\ncalculer statistiques;\n    :Envoyer donn\u00e9es \\npar passerelle, serveur;\n  }\nrepeat while (Intervalle de temps \\nparam\u00e9tr\u00e9) is (nouveau \\ncycle)\nstop\n</code></pre>"},{"location":"sources/#streamlit","title":"Streamlit","text":"<pre><code>@startuml\npartition Site Streamlit {\nstart\n:Ouvrir page web;\n:Connecter \u00e0 \\nMongoDB Atlas;\nif (S'authentifier?) is (r\u00e9ussi) then\n  :Utiliser param\u00e8tres \\npar d\u00e9faut;\n  (A)\n  kill\nelse\n  :Message erreur;\nkill\n\n(A)\nif (Changer param\u00e8tres?) is (fait) then\n  :Mettre \u00e0 jour \\net continuer;\n  (B)\n  kill\nelse\n  :Continuer;\n  (B)\n  kill\n\n(B)\n:Lancer l'extraction;\nrepeat\n  :Extraire donn\u00e9es de \\nMongoDB Atlas;\n  (C)\n'backward:V\u00e9rifier;\nrepeat while (Intervalle de temps \\nparam\u00e9tr\u00e9) is (nouveau \\ncycle)\n:Arr\u00eater l'extraction;\nkill\n\n(C)\n:Traiter et pr\u00e9senter \\ndonn\u00e9es;\n:Fermeture page web;\nstop\n@enduml\n</code></pre>"},{"location":"sources/#diagrammes-de-classe","title":"Diagrammes de classe","text":"<p>class diagrams</p>"},{"location":"sources/#rpi-pico_1","title":"RPi Pico","text":"<pre><code>@startuml\nclass User {\n  username\n  password\n  +sign_in()\n}\n\nclass Group {\n  name\n}\n\nclass Member {\n  roles\n}\n\nUser .. Member\nGroup .. Member\n@enduml\n</code></pre>"},{"location":"sources/#modele-de-document-mongodb","title":"Mod\u00e8le de document MongoDB","text":"<p>display JSON</p> <pre><code>@startjson\n{\n\"datetime\": \"2023-01-13 16:15:39.401550\",\n\"noeud\": \"pico01\",  \n\"capteur\": \"temperature\",\n\"metrique\": \"brute\",\n\"valeur\": 23.4519\n}\n@endjson\n</code></pre>"},{"location":"sources/#diagrammes-detat","title":"Diagrammes d'\u00e9tat","text":"<p>state diagrams</p>"},{"location":"sources/#rpi-pico_2","title":"RPi Pico","text":"<pre><code>@startuml\n[*] --&gt; Branch\u00e9\n\nBranch\u00e9: RPi Pico branch\u00e9 \\npour code et \\naliment\u00e9 (On)\nBranch\u00e9-&gt; D\u00e9branch\u00e9\nD\u00e9branch\u00e9: RPi Pico d\u00e9branch\u00e9 et \\nnon aliment\u00e9 (On)\nBranch\u00e9&lt;- D\u00e9branch\u00e9\n\nBranch\u00e9--&gt; [*]\nD\u00e9branch\u00e9--&gt; [*]\n@enduml\n</code></pre>"},{"location":"sources/#streamlit_1","title":"Streamlit","text":"<pre><code>@startuml\n[*] --&gt; Actif\n\nActif: Session du site \\nStreamlit active\nActif-&gt; Inactif\nInactif: Aucun session active\nActif&lt;- Inactif\n\nActif--&gt; [*]\nInactif--&gt; [*]\n@enduml\n</code></pre>"},{"location":"sources/#autres-diagrammes","title":"Autres diagrammes","text":"<p>D'autres diagrammes n'ont pas \u00e9t\u00e9 utilis\u00e9s, car inutiles:</p> <ul> <li>aucun diagramme d'utilisation (use case); pas d'usager de logiciel, produit;</li> <li>aucun diagramme de s\u00e9quence (use case); idem;</li> <li>aucun diagramme de paquetage; aucun logiciel complexe.</li> </ul>"},{"location":"sources/#outils","title":"Outils","text":""},{"location":"sources/#services","title":"Services","text":"<ul> <li>Documentation</li> <li>PlantUML (diagrammes)</li> <li>Markdown (MkDocs, GitHub, etc.)</li> <li>MkDocc (documentation)</li> <li>tableur pour la comptabilit\u00e9, le budget (pi\u00e8ces et autres)</li> <li>Gestion des versions et h\u00e9bergement<ul> <li>langage Git</li> <li>GitHub</li> </ul> </li> <li>H\u00e9bergement<ul> <li>Streamlit Cloud</li> </ul> </li> <li>Collaboration au projet<ul> <li>Trello</li> <li>Teams</li> </ul> </li> </ul>"},{"location":"sources/#base-de-donnees","title":"Base de donn\u00e9es","text":"<ul> <li>MongoDB, MongoDB Atlas</li> <li>Compass</li> </ul>"},{"location":"sources/#logiciels","title":"Logiciels","text":"<ul> <li>JupyterLab pour Python (pour pr\u00e9parer des parties de Streamlit)</li> <li>Spyder pour Streamlit, langages web et Python</li> <li>PyScripter pour Python</li> <li>VS pour Markdown et Python</li> <li>Thonny pour MicroPython</li> <li>Notepad2 pour autres textes</li> </ul>"},{"location":"sources/#composants","title":"Composants","text":"<ul> <li>microcontr\u00f4leur Raspberry Pi Pico W (sans ent\u00eates)</li> <li>ent\u00eates 2x20 \u00e0 souder</li> <li>platine de d\u00e9veloppement</li> <li>alimentation 3.3V (c\u00e2ble USB ou piles)</li> <li>capteur de temp\u00e9rature-humidit\u00e9 num\u00e9rique I2C DS 18B20</li> </ul>"}]}